<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--    这样是使用无参数构造函数进行实列化的-->
    <!--    <bean id="MyTestBean" class="com.mc.bean.MyTestBean">-->
    <!--        <property name="names" value="zhangshang"></property>-->
    <!--    </bean>-->
    <!--    <bean id="myBeanFactoryPostProcessor" class="com.mc.bean.MyBeanFactoryPostProcessor"></bean>-->
    <!--    <bean id="MyBeanPostProcessor" class="com.mc.bean.MyBeanPostProcessor"></bean>-->
    <!--&lt;!&ndash;    取别名&ndash;&gt;-->
    <!--    <alias name="MyBeanPostProcessor" alias="myBeanPostProcessor"></alias>-->

    <!--&lt;!&ndash;    使用静态工厂&ndash;&gt;-->
    <!--    <bean id="clientService"-->
    <!--          class="com.mc.bean.ClientService"-->
    <!--          factory-method="createInstance"/>-->

    <!--    演示循环依赖，官方推荐的是set配置来解决，现在的问题就是底层代码是如何解决循环依赖这个问题的
            所谓的循环依赖是当一个对象进行初始化的时候发现要另外一个对象，但容器中并没有这个对象
    -->
    <bean id="a" class="com.mc.bean.A">
        <property name="name" value="哈哈"/>
<!--        <property name="b" ref="b"/>-->
    </bean>
    <aop:aspectj-autoproxy expose-proxy="true"/>
    <bean id="test" class="com.mc.aop.TestBean"></bean>
    <bean class="com.mc.aop.AspectJTest"></bean>
<!--    <bean id="b" class="com.mc.bean.B">-->
<!--        <property name="a" ref="a"/>-->
<!--        <property name="age" value="20"/>-->
<!--    </bean>-->

</beans>